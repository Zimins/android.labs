/*
 * This file is generated by jOOQ.
*/
package org.jooq.util.maven.example.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.util.maven.example.Indexes;
import org.jooq.util.maven.example.Keys;
import org.jooq.util.maven.example.Public;
import org.jooq.util.maven.example.tables.records.MarkerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Marker extends TableImpl<MarkerRecord> {

    private static final long serialVersionUID = 1139956032;

    /**
     * The reference instance of <code>public.marker</code>
     */
    public static final Marker MARKER = new Marker();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MarkerRecord> getRecordType() {
        return MarkerRecord.class;
    }

    /**
     * The column <code>public.marker.id</code>.
     */
    public final TableField<MarkerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('marker_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.marker.name</code>.
     */
    public final TableField<MarkerRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.marker.latitude</code>.
     */
    public final TableField<MarkerRecord, Double> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.marker.longitude</code>.
     */
    public final TableField<MarkerRecord, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * Create a <code>public.marker</code> table reference
     */
    public Marker() {
        this(DSL.name("marker"), null);
    }

    /**
     * Create an aliased <code>public.marker</code> table reference
     */
    public Marker(String alias) {
        this(DSL.name(alias), MARKER);
    }

    /**
     * Create an aliased <code>public.marker</code> table reference
     */
    public Marker(Name alias) {
        this(alias, MARKER);
    }

    private Marker(Name alias, Table<MarkerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Marker(Name alias, Table<MarkerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MARKER_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MarkerRecord, Long> getIdentity() {
        return Keys.IDENTITY_MARKER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MarkerRecord> getPrimaryKey() {
        return Keys.MARKER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MarkerRecord>> getKeys() {
        return Arrays.<UniqueKey<MarkerRecord>>asList(Keys.MARKER_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Marker as(String alias) {
        return new Marker(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Marker as(Name alias) {
        return new Marker(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Marker rename(String name) {
        return new Marker(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Marker rename(Name name) {
        return new Marker(name, null);
    }
}
